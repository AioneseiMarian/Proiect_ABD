#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proiect_ABD.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MonitorizareEchipamente")]
	public partial class EquipmentDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertEchipamente(Echipamente instance);
    partial void UpdateEchipamente(Echipamente instance);
    partial void DeleteEchipamente(Echipamente instance);
    partial void InsertUtilizatori(Utilizatori instance);
    partial void UpdateUtilizatori(Utilizatori instance);
    partial void DeleteUtilizatori(Utilizatori instance);
    #endregion
		
		public EquipmentDBDataContext() : 
				base(global::Proiect_ABD.Properties.Settings.Default.MonitorizareEchipamenteConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EquipmentDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EquipmentDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EquipmentDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EquipmentDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Echipamente> Echipamentes
		{
			get
			{
				return this.GetTable<Echipamente>();
			}
		}
		
		public System.Data.Linq.Table<Utilizatori> Utilizatoris
		{
			get
			{
				return this.GetTable<Utilizatori>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Echipamente")]
	public partial class Echipamente : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Nume;
		
		private string _Status;
		
		private System.DateTime _UltimaActualizare;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeChanging(string value);
    partial void OnNumeChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnUltimaActualizareChanging(System.DateTime value);
    partial void OnUltimaActualizareChanged();
    #endregion
		
		public Echipamente()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nume", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Nume
		{
			get
			{
				return this._Nume;
			}
			set
			{
				if ((this._Nume != value))
				{
					this.OnNumeChanging(value);
					this.SendPropertyChanging();
					this._Nume = value;
					this.SendPropertyChanged("Nume");
					this.OnNumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UltimaActualizare", DbType="DateTime NOT NULL")]
		public System.DateTime UltimaActualizare
		{
			get
			{
				return this._UltimaActualizare;
			}
			set
			{
				if ((this._UltimaActualizare != value))
				{
					this.OnUltimaActualizareChanging(value);
					this.SendPropertyChanging();
					this._UltimaActualizare = value;
					this.SendPropertyChanged("UltimaActualizare");
					this.OnUltimaActualizareChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizatori")]
	public partial class Utilizatori : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _NumeUtilizator;
		
		private string _Parola;
		
		private string _Rol;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNumeUtilizatorChanging(string value);
    partial void OnNumeUtilizatorChanged();
    partial void OnParolaChanging(string value);
    partial void OnParolaChanged();
    partial void OnRolChanging(string value);
    partial void OnRolChanged();
    #endregion
		
		public Utilizatori()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeUtilizator", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NumeUtilizator
		{
			get
			{
				return this._NumeUtilizator;
			}
			set
			{
				if ((this._NumeUtilizator != value))
				{
					this.OnNumeUtilizatorChanging(value);
					this.SendPropertyChanging();
					this._NumeUtilizator = value;
					this.SendPropertyChanged("NumeUtilizator");
					this.OnNumeUtilizatorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parola", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Parola
		{
			get
			{
				return this._Parola;
			}
			set
			{
				if ((this._Parola != value))
				{
					this.OnParolaChanging(value);
					this.SendPropertyChanging();
					this._Parola = value;
					this.SendPropertyChanged("Parola");
					this.OnParolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
