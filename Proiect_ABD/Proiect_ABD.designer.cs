#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Proiect_ABD
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Proiect_ABD")]
	public partial class Proiect_ABDDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertMaintenance(Maintenance instance);
    partial void UpdateMaintenance(Maintenance instance);
    partial void DeleteMaintenance(Maintenance instance);
    partial void InsertEquipment(Equipment instance);
    partial void UpdateEquipment(Equipment instance);
    partial void DeleteEquipment(Equipment instance);
    #endregion
		
		public Proiect_ABDDataContext() : 
				base(global::Proiect_ABD.Properties.Settings.Default.Proiect_ABDConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public Proiect_ABDDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Proiect_ABDDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Proiect_ABDDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Proiect_ABDDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Maintenance> Maintenances
		{
			get
			{
				return this.GetTable<Maintenance>();
			}
		}
		
		public System.Data.Linq.Table<Equipment> Equipments
		{
			get
			{
				return this.GetTable<Equipment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__report_id;
		
		private string @__title;
		
		private string @__description;
		
		private int @__created_by;
		
		private System.DateTime @__created_at;
		
		private int @__equipment_id;
		
		private EntityRef<User> _User;
		
		private EntityRef<Equipment> _Equipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_report_idChanging(int value);
    partial void On_report_idChanged();
    partial void On_titleChanging(string value);
    partial void On_titleChanged();
    partial void On_descriptionChanging(string value);
    partial void On_descriptionChanged();
    partial void On_created_byChanging(int value);
    partial void On_created_byChanged();
    partial void On_created_atChanging(System.DateTime value);
    partial void On_created_atChanged();
    partial void On_equipment_idChanging(int value);
    partial void On_equipment_idChanged();
    #endregion
		
		public Report()
		{
			this._User = default(EntityRef<User>);
			this._Equipment = default(EntityRef<Equipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_report_id]", Storage="__report_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _report_id
		{
			get
			{
				return this.@__report_id;
			}
			set
			{
				if ((this.@__report_id != value))
				{
					this.On_report_idChanging(value);
					this.SendPropertyChanging();
					this.@__report_id = value;
					this.SendPropertyChanged("_report_id");
					this.On_report_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_title]", Storage="__title", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string _title
		{
			get
			{
				return this.@__title;
			}
			set
			{
				if ((this.@__title != value))
				{
					this.On_titleChanging(value);
					this.SendPropertyChanging();
					this.@__title = value;
					this.SendPropertyChanged("_title");
					this.On_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_description]", Storage="__description", DbType="NVarChar(MAX)")]
		public string _description
		{
			get
			{
				return this.@__description;
			}
			set
			{
				if ((this.@__description != value))
				{
					this.On_descriptionChanging(value);
					this.SendPropertyChanging();
					this.@__description = value;
					this.SendPropertyChanged("_description");
					this.On_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_created_by]", Storage="__created_by", DbType="Int NOT NULL")]
		public int _created_by
		{
			get
			{
				return this.@__created_by;
			}
			set
			{
				if ((this.@__created_by != value))
				{
					this.On_created_byChanging(value);
					this.SendPropertyChanging();
					this.@__created_by = value;
					this.SendPropertyChanged("_created_by");
					this.On_created_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_created_at]", Storage="__created_at", DbType="DateTime NOT NULL")]
		public System.DateTime _created_at
		{
			get
			{
				return this.@__created_at;
			}
			set
			{
				if ((this.@__created_at != value))
				{
					this.On_created_atChanging(value);
					this.SendPropertyChanging();
					this.@__created_at = value;
					this.SendPropertyChanged("_created_at");
					this.On_created_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_equipment_id]", Storage="__equipment_id", DbType="Int NOT NULL")]
		public int _equipment_id
		{
			get
			{
				return this.@__equipment_id;
			}
			set
			{
				if ((this.@__equipment_id != value))
				{
					this.On_equipment_idChanging(value);
					this.SendPropertyChanging();
					this.@__equipment_id = value;
					this.SendPropertyChanged("_equipment_id");
					this.On_equipment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Report", Storage="_User", ThisKey="_created_by", OtherKey="_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this.@__created_by = value._id;
					}
					else
					{
						this.@__created_by = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Report", Storage="_Equipment", ThisKey="_equipment_id", OtherKey="_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Equipment Equipment
		{
			get
			{
				return this._Equipment.Entity;
			}
			set
			{
				Equipment previousValue = this._Equipment.Entity;
				if (((previousValue != value) 
							|| (this._Equipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipment.Entity = null;
						previousValue.Reports.Remove(this);
					}
					this._Equipment.Entity = value;
					if ((value != null))
					{
						value.Reports.Add(this);
						this.@__equipment_id = value._id;
					}
					else
					{
						this.@__equipment_id = default(int);
					}
					this.SendPropertyChanged("Equipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__role_id;
		
		private string @__role_name;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_role_idChanging(int value);
    partial void On_role_idChanged();
    partial void On_role_nameChanging(string value);
    partial void On_role_nameChanged();
    #endregion
		
		public Role()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_role_id]", Storage="__role_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int _role_id
		{
			get
			{
				return this.@__role_id;
			}
			set
			{
				if ((this.@__role_id != value))
				{
					this.On_role_idChanging(value);
					this.SendPropertyChanging();
					this.@__role_id = value;
					this.SendPropertyChanged("_role_id");
					this.On_role_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_role_name]", Storage="__role_name", DbType="NVarChar(50)")]
		public string _role_name
		{
			get
			{
				return this.@__role_name;
			}
			set
			{
				if ((this.@__role_name != value))
				{
					this.On_role_nameChanging(value);
					this.SendPropertyChanging();
					this.@__role_name = value;
					this.SendPropertyChanged("_role_name");
					this.On_role_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Users", ThisKey="_role_id", OtherKey="_role_id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__id;
		
		private string @__name;
		
		private string @__password;
		
		private string @__email;
		
		private int @__role_id;
		
		private EntitySet<Report> _Reports;
		
		private EntitySet<Maintenance> _Maintenances;
		
		private EntityRef<Role> _Role;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(int value);
    partial void On_idChanged();
    partial void On_nameChanging(string value);
    partial void On_nameChanged();
    partial void On_passwordChanging(string value);
    partial void On_passwordChanged();
    partial void On_emailChanging(string value);
    partial void On_emailChanged();
    partial void On_role_idChanging(int value);
    partial void On_role_idChanged();
    #endregion
		
		public User()
		{
			this._Reports = new EntitySet<Report>(new Action<Report>(this.attach_Reports), new Action<Report>(this.detach_Reports));
			this._Maintenances = new EntitySet<Maintenance>(new Action<Maintenance>(this.attach_Maintenances), new Action<Maintenance>(this.detach_Maintenances));
			this._Role = default(EntityRef<Role>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_name]", Storage="__name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string _name
		{
			get
			{
				return this.@__name;
			}
			set
			{
				if ((this.@__name != value))
				{
					this.On_nameChanging(value);
					this.SendPropertyChanging();
					this.@__name = value;
					this.SendPropertyChanged("_name");
					this.On_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_password]", Storage="__password", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string _password
		{
			get
			{
				return this.@__password;
			}
			set
			{
				if ((this.@__password != value))
				{
					this.On_passwordChanging(value);
					this.SendPropertyChanging();
					this.@__password = value;
					this.SendPropertyChanged("_password");
					this.On_passwordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_email]", Storage="__email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string _email
		{
			get
			{
				return this.@__email;
			}
			set
			{
				if ((this.@__email != value))
				{
					this.On_emailChanging(value);
					this.SendPropertyChanging();
					this.@__email = value;
					this.SendPropertyChanged("_email");
					this.On_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_role_id]", Storage="__role_id", DbType="Int NOT NULL")]
		public int _role_id
		{
			get
			{
				return this.@__role_id;
			}
			set
			{
				if ((this.@__role_id != value))
				{
					this.On_role_idChanging(value);
					this.SendPropertyChanging();
					this.@__role_id = value;
					this.SendPropertyChanged("_role_id");
					this.On_role_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Report", Storage="_Reports", ThisKey="_id", OtherKey="_created_by")]
		public EntitySet<Report> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Maintenance", Storage="_Maintenances", ThisKey="_id", OtherKey="_performed_by")]
		public EntitySet<Maintenance> Maintenances
		{
			get
			{
				return this._Maintenances;
			}
			set
			{
				this._Maintenances.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_User", Storage="_Role", ThisKey="_role_id", OtherKey="_role_id", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this.@__role_id = value._role_id;
					}
					else
					{
						this.@__role_id = default(int);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Maintenances(Maintenance entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Maintenances(Maintenance entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Maintenance")]
	public partial class Maintenance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__maintenance_id;
		
		private int @__equipment_id;
		
		private int @__performed_by;
		
		private string @__description;
		
		private System.DateTime @__performed_at;
		
		private string @__status;
		
		private EntityRef<User> _User;
		
		private EntityRef<Equipment> _Equipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_maintenance_idChanging(int value);
    partial void On_maintenance_idChanged();
    partial void On_equipment_idChanging(int value);
    partial void On_equipment_idChanged();
    partial void On_performed_byChanging(int value);
    partial void On_performed_byChanged();
    partial void On_descriptionChanging(string value);
    partial void On_descriptionChanged();
    partial void On_performed_atChanging(System.DateTime value);
    partial void On_performed_atChanged();
    partial void On_statusChanging(string value);
    partial void On_statusChanged();
    #endregion
		
		public Maintenance()
		{
			this._User = default(EntityRef<User>);
			this._Equipment = default(EntityRef<Equipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_maintenance_id]", Storage="__maintenance_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _maintenance_id
		{
			get
			{
				return this.@__maintenance_id;
			}
			set
			{
				if ((this.@__maintenance_id != value))
				{
					this.On_maintenance_idChanging(value);
					this.SendPropertyChanging();
					this.@__maintenance_id = value;
					this.SendPropertyChanged("_maintenance_id");
					this.On_maintenance_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_equipment_id]", Storage="__equipment_id", DbType="Int NOT NULL")]
		public int _equipment_id
		{
			get
			{
				return this.@__equipment_id;
			}
			set
			{
				if ((this.@__equipment_id != value))
				{
					this.On_equipment_idChanging(value);
					this.SendPropertyChanging();
					this.@__equipment_id = value;
					this.SendPropertyChanged("_equipment_id");
					this.On_equipment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_performed_by]", Storage="__performed_by", DbType="Int NOT NULL")]
		public int _performed_by
		{
			get
			{
				return this.@__performed_by;
			}
			set
			{
				if ((this.@__performed_by != value))
				{
					this.On_performed_byChanging(value);
					this.SendPropertyChanging();
					this.@__performed_by = value;
					this.SendPropertyChanged("_performed_by");
					this.On_performed_byChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_description]", Storage="__description", DbType="NVarChar(MAX)")]
		public string _description
		{
			get
			{
				return this.@__description;
			}
			set
			{
				if ((this.@__description != value))
				{
					this.On_descriptionChanging(value);
					this.SendPropertyChanging();
					this.@__description = value;
					this.SendPropertyChanged("_description");
					this.On_descriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_performed_at]", Storage="__performed_at", DbType="DateTime NOT NULL")]
		public System.DateTime _performed_at
		{
			get
			{
				return this.@__performed_at;
			}
			set
			{
				if ((this.@__performed_at != value))
				{
					this.On_performed_atChanging(value);
					this.SendPropertyChanging();
					this.@__performed_at = value;
					this.SendPropertyChanged("_performed_at");
					this.On_performed_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_status]", Storage="__status", DbType="NVarChar(20)")]
		public string _status
		{
			get
			{
				return this.@__status;
			}
			set
			{
				if ((this.@__status != value))
				{
					this.On_statusChanging(value);
					this.SendPropertyChanging();
					this.@__status = value;
					this.SendPropertyChanged("_status");
					this.On_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Maintenance", Storage="_User", ThisKey="_performed_by", OtherKey="_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Maintenances.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Maintenances.Add(this);
						this.@__performed_by = value._id;
					}
					else
					{
						this.@__performed_by = default(int);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Maintenance", Storage="_Equipment", ThisKey="_equipment_id", OtherKey="_id", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Equipment Equipment
		{
			get
			{
				return this._Equipment.Entity;
			}
			set
			{
				Equipment previousValue = this._Equipment.Entity;
				if (((previousValue != value) 
							|| (this._Equipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipment.Entity = null;
						previousValue.Maintenances.Remove(this);
					}
					this._Equipment.Entity = value;
					if ((value != null))
					{
						value.Maintenances.Add(this);
						this.@__equipment_id = value._id;
					}
					else
					{
						this.@__equipment_id = default(int);
					}
					this.SendPropertyChanged("Equipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipments")]
	public partial class Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int @__id;
		
		private string @__name;
		
		private string @__status;
		
		private System.DateTime @__last_update;
		
		private EntitySet<Report> _Reports;
		
		private EntitySet<Maintenance> _Maintenances;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On_idChanging(int value);
    partial void On_idChanged();
    partial void On_nameChanging(string value);
    partial void On_nameChanged();
    partial void On_statusChanging(string value);
    partial void On_statusChanged();
    partial void On_last_updateChanging(System.DateTime value);
    partial void On_last_updateChanged();
    #endregion
		
		public Equipment()
		{
			this._Reports = new EntitySet<Report>(new Action<Report>(this.attach_Reports), new Action<Report>(this.detach_Reports));
			this._Maintenances = new EntitySet<Maintenance>(new Action<Maintenance>(this.attach_Maintenances), new Action<Maintenance>(this.detach_Maintenances));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_id]", Storage="__id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int _id
		{
			get
			{
				return this.@__id;
			}
			set
			{
				if ((this.@__id != value))
				{
					this.On_idChanging(value);
					this.SendPropertyChanging();
					this.@__id = value;
					this.SendPropertyChanged("_id");
					this.On_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_name]", Storage="__name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string _name
		{
			get
			{
				return this.@__name;
			}
			set
			{
				if ((this.@__name != value))
				{
					this.On_nameChanging(value);
					this.SendPropertyChanging();
					this.@__name = value;
					this.SendPropertyChanged("_name");
					this.On_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_status]", Storage="__status", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string _status
		{
			get
			{
				return this.@__status;
			}
			set
			{
				if ((this.@__status != value))
				{
					this.On_statusChanging(value);
					this.SendPropertyChanging();
					this.@__status = value;
					this.SendPropertyChanged("_status");
					this.On_statusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[_last_update]", Storage="__last_update", DbType="DateTime NOT NULL")]
		public System.DateTime _last_update
		{
			get
			{
				return this.@__last_update;
			}
			set
			{
				if ((this.@__last_update != value))
				{
					this.On_last_updateChanging(value);
					this.SendPropertyChanging();
					this.@__last_update = value;
					this.SendPropertyChanged("_last_update");
					this.On_last_updateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Report", Storage="_Reports", ThisKey="_id", OtherKey="_equipment_id")]
		public EntitySet<Report> Reports
		{
			get
			{
				return this._Reports;
			}
			set
			{
				this._Reports.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Maintenance", Storage="_Maintenances", ThisKey="_id", OtherKey="_equipment_id")]
		public EntitySet<Maintenance> Maintenances
		{
			get
			{
				return this._Maintenances;
			}
			set
			{
				this._Maintenances.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = this;
		}
		
		private void detach_Reports(Report entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = null;
		}
		
		private void attach_Maintenances(Maintenance entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = this;
		}
		
		private void detach_Maintenances(Maintenance entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = null;
		}
	}
}
#pragma warning restore 1591
